name: ドキュメント整合性チェック

on:
  pull_request:
    paths:
      - 'docs/**'
      - 'content/**'
      - 'scripts/validate_docs.py'
      - '.github/workflows/validate-docs.yml'
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'content/**'
      - 'scripts/validate_docs.py'
      - '.github/workflows/validate-docs.yml'

jobs:
  validate:
    name: バリデーション実行
    runs-on: ubuntu-latest
    
    steps:
    - name: チェックアウト
      uses: actions/checkout@v4
      
    - name: Python セットアップ
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: 依存関係インストール
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
        
    - name: ドキュメント整合性チェック
      id: validate
      run: |
        python scripts/validate_docs.py
        echo "validation_result=$?" >> $GITHUB_OUTPUT
        
    - name: 結果サマリー
      if: always()
      run: |
        echo "## 📝 ドキュメント検証結果" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### チェック項目:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ ADR 連番検証" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ ファイル存在確認" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ 最終更新日時チェック" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ log/ ファイル命名規則（YYYYMMDD_slug.md）" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ governance/ メタドキュメント純粋性（大文字のみ）" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.validate.outcome }}" == "success" ]; then
          echo "**結果: ✅ 全てのチェックに合格しました！**" >> $GITHUB_STEP_SUMMARY
        else
          echo "**結果: ❌ バリデーションエラーが発生しました。**" >> $GITHUB_STEP_SUMMARY
          echo "詳細はログを確認してください。" >> $GITHUB_STEP_SUMMARY
        fi
